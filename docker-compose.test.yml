version: '3.8'

services:
  # VoiceApp API Server
  voiceapp-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - PORT=8000
      - ALLOWED_ORIGINS=*
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./firebase-credentials.json:/app/firebase-credentials.json:ro
    networks:
      - voiceapp-test
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - voiceapp-test
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Smoke Test Runner
  smoke-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - API_BASE_URL=http://voiceapp-api:8000
    depends_on:
      voiceapp-api:
        condition: service_healthy
    volumes:
      - ./scripts:/app/scripts
      - ./firebase-credentials.json:/app/firebase-credentials.json:ro
      - ./test-results:/app/test-results
    networks:
      - voiceapp-test
    command: >
      sh -c "
        echo 'ðŸ”¥ Starting VoiceApp Smoke Tests in Docker...' &&
        python scripts/smoke_test.py --base-url http://voiceapp-api:8000 --verbose &&
        echo 'âœ… Smoke tests completed!'
      "

  # Documentation Generator
  docs-generator:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - API_BASE_URL=http://voiceapp-api:8000
    depends_on:
      voiceapp-api:
        condition: service_healthy
    volumes:
      - ./scripts:/app/scripts
      - ./docs:/app/docs
    networks:
      - voiceapp-test
    command: >
      sh -c "
        echo 'ðŸ“š Generating API Documentation in Docker...' &&
        python scripts/generate_docs.py --base-url http://voiceapp-api:8000 --output-dir /app/docs &&
        echo 'âœ… Documentation generation completed!'
      "

networks:
  voiceapp-test:
    driver: bridge

volumes:
  test-results:
  docs: 