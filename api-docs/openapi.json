{
  "openapi": "3.1.0",
  "info": {
    "title": "VoiceApp API",
    "description": "AI-driven voice social platform backend API",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Sign Up",
        "description": "Register a new user (Firebase user already created on client)\nClient should create Firebase user first, then call this endpoint",
        "operationId": "sign_up_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Sign In",
        "description": "Sign in user (Firebase authentication handled on client)\nThis endpoint just verifies the user exists in our database",
        "operationId": "sign_in_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Sign Out",
        "description": "Sign out (handled on client with Firebase Auth)",
        "operationId": "sign_out_api_auth_signout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Profile",
        "description": "Get current user profile (requires Firebase ID Token)",
        "operationId": "get_profile_api_auth_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/topics/": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Get Topics",
        "description": "Get available topics for matching",
        "operationId": "get_topics_api_topics__get",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "difficulty_level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Difficulty Level"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/topics/popular": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Get Popular Topics",
        "description": "Get popular topics",
        "operationId": "get_popular_topics_api_topics_popular_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/topics/search": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Search Topics",
        "description": "Search topics by name or description",
        "operationId": "search_topics_api_topics_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/topics/{topic_id}": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Get Topic",
        "description": "Get specific topic details",
        "operationId": "get_topic_api_topics__topic_id__get",
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/topics/preferences": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Get Topic Preferences",
        "description": "Get current user's topic preferences",
        "operationId": "get_topic_preferences_api_topics_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "topics"
        ],
        "summary": "Set Topic Preferences",
        "description": "Set user's topic preferences for matching",
        "operationId": "set_topic_preferences_api_topics_preferences_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTopicPreferencesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/matching/match": {
      "post": {
        "tags": [
          "matching"
        ],
        "summary": "Request Match",
        "description": "Request to be matched with other users",
        "operationId": "request_match_api_matching_match_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/matching/cancel": {
      "post": {
        "tags": [
          "matching"
        ],
        "summary": "Cancel Match",
        "description": "Cancel pending match request",
        "operationId": "cancel_match_api_matching_cancel_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/matching/status": {
      "get": {
        "tags": [
          "matching"
        ],
        "summary": "Get Queue Status",
        "description": "Get current position in matching queue",
        "operationId": "get_queue_status_api_matching_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/matching/history": {
      "get": {
        "tags": [
          "matching"
        ],
        "summary": "Get Match History",
        "description": "Get user's match history",
        "operationId": "get_match_history_api_matching_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/process-timeout-matches": {
      "post": {
        "tags": [
          "matching"
        ],
        "summary": "Process Timeout Matches Manually",
        "description": "Manually trigger timeout matching process (for testing/admin use)",
        "operationId": "process_timeout_matches_manually_api_matching_process_timeout_matches_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "timeout_minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1.0,
              "title": "Timeout Minutes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/timeout-stats": {
      "get": {
        "tags": [
          "matching"
        ],
        "summary": "Get Timeout Stats",
        "description": "Get statistics about users waiting too long",
        "operationId": "get_timeout_stats_api_matching_timeout_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "timeout_minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1.0,
              "title": "Timeout Minutes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/ai-match": {
      "post": {
        "tags": [
          "matching"
        ],
        "summary": "Ai Driven Match",
        "description": "NEW: Simplified AI-driven matching using GPT-4o Audio Preview\n\nUser registers and directly inputs voice → GPT-4o processes → Intelligent matching\n\nWorkflow:\n1. User voice input: \"I want to talk about AI and entrepreneurship\"\n2. GPT-4o Audio directly understands and extracts hashtags\n3. Match users based on hashtag similarity\n4. Return match results and AI voice confirmation",
        "operationId": "ai_driven_match_api_matching_ai_match_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIMatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIMatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/rooms/": {
      "post": {
        "tags": [
          "rooms"
        ],
        "summary": "Create Room",
        "description": "Create a new voice chat room",
        "operationId": "create_room_api_rooms__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "rooms"
        ],
        "summary": "Get Rooms",
        "description": "Get available rooms",
        "operationId": "get_rooms_api_rooms__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "topic",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Topic"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/join": {
      "post": {
        "tags": [
          "rooms"
        ],
        "summary": "Join Room",
        "description": "Join an existing room",
        "operationId": "join_room_api_rooms_join_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinRoomRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/rooms/{room_id}/leave": {
      "post": {
        "tags": [
          "rooms"
        ],
        "summary": "Leave Room",
        "description": "Leave a room",
        "operationId": "leave_room_api_rooms__room_id__leave_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{room_id}": {
      "get": {
        "tags": [
          "rooms"
        ],
        "summary": "Get Room",
        "description": "Get room details",
        "operationId": "get_room_api_rooms__room_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{room_id}/participants": {
      "get": {
        "tags": [
          "rooms"
        ],
        "summary": "Get Room Participants",
        "description": "Get room participants",
        "operationId": "get_room_participants_api_rooms__room_id__participants_get",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantResponse"
                  },
                  "title": "Response Get Room Participants Api Rooms  Room Id  Participants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/": {
      "get": {
        "tags": [
          "friends"
        ],
        "summary": "Get Friends",
        "description": "Get user's friends list with real-time online status",
        "operationId": "get_friends_api_friends__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/request": {
      "post": {
        "tags": [
          "friends"
        ],
        "summary": "Send Friend Request",
        "description": "Send a friend request",
        "operationId": "send_friend_request_api_friends_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFriendRequestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/friends/requests": {
      "get": {
        "tags": [
          "friends"
        ],
        "summary": "Get Friend Requests",
        "description": "Get friend requests (received or sent)",
        "operationId": "get_friend_requests_api_friends_requests_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "received",
              "title": "Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendRequestListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/requests/{request_id}/accept": {
      "post": {
        "tags": [
          "friends"
        ],
        "summary": "Accept Friend Request",
        "description": "Accept a friend request",
        "operationId": "accept_friend_request_api_friends_requests__request_id__accept_post",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/requests/{request_id}/reject": {
      "post": {
        "tags": [
          "friends"
        ],
        "summary": "Reject Friend Request",
        "description": "Reject a friend request",
        "operationId": "reject_friend_request_api_friends_requests__request_id__reject_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/{user_id}": {
      "delete": {
        "tags": [
          "friends"
        ],
        "summary": "Remove Friend",
        "description": "Remove a friend",
        "operationId": "remove_friend_api_friends__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/{user_id}/block": {
      "post": {
        "tags": [
          "friends"
        ],
        "summary": "Block User",
        "description": "Block a user",
        "operationId": "block_user_api_friends__user_id__block_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "friends"
        ],
        "summary": "Unblock User",
        "description": "Unblock a user",
        "operationId": "unblock_user_api_friends__user_id__block_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/search": {
      "get": {
        "tags": [
          "friends"
        ],
        "summary": "Search Users",
        "description": "Search for users by display name or email",
        "operationId": "search_users_api_friends_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/": {
      "get": {
        "tags": [
          "recordings"
        ],
        "summary": "Get Recordings",
        "description": "Get user's recordings",
        "operationId": "get_recordings_api_recordings__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Room Id"
            }
          },
          {
            "name": "topic",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Topic"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/{recording_id}": {
      "get": {
        "tags": [
          "recordings"
        ],
        "summary": "Get Recording",
        "description": "Get specific recording details",
        "operationId": "get_recording_api_recordings__recording_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recordings"
        ],
        "summary": "Delete Recording",
        "description": "Delete a recording",
        "operationId": "delete_recording_api_recordings__recording_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/{recording_id}/download": {
      "get": {
        "tags": [
          "recordings"
        ],
        "summary": "Download Recording",
        "description": "Download recording file",
        "operationId": "download_recording_api_recordings__recording_id__download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/{recording_id}/metadata": {
      "post": {
        "tags": [
          "recordings"
        ],
        "summary": "Update Recording Metadata",
        "description": "Update recording metadata",
        "operationId": "update_recording_metadata_api_recordings__recording_id__metadata_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/{recording_id}/share": {
      "post": {
        "tags": [
          "recordings"
        ],
        "summary": "Share Recording",
        "description": "Generate shareable link for recording",
        "operationId": "share_recording_api_recordings__recording_id__share_post",
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/{recording_id}/transcript": {
      "get": {
        "tags": [
          "recordings"
        ],
        "summary": "Get Recording Transcript",
        "description": "Get recording transcript using OpenAI Whisper",
        "operationId": "get_recording_transcript_api_recordings__recording_id__transcript_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recordings/{recording_id}/summary": {
      "get": {
        "tags": [
          "recordings"
        ],
        "summary": "Get Conversation Summary",
        "description": "Generate AI-powered conversation summary",
        "operationId": "get_conversation_summary_api_recordings__recording_id__summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id"
            }
          },
          {
            "name": "summary_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "detailed",
              "title": "Summary Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-host/start-session": {
      "post": {
        "tags": [
          "ai-host"
        ],
        "summary": "Start Ai Session",
        "description": "Start a new AI host session for the user",
        "operationId": "start_ai_session_api_ai_host_start_session_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-host/process-input": {
      "post": {
        "tags": [
          "ai-host"
        ],
        "summary": "Process User Input",
        "description": "Process user input and get AI host response",
        "operationId": "process_user_input_api_ai_host_process_input_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessInputRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-host/tts": {
      "post": {
        "tags": [
          "ai-host"
        ],
        "summary": "Text To Speech",
        "description": "Convert text to speech using OpenAI TTS\nThis endpoint can be called directly by the frontend to obtain AI voice",
        "operationId": "text_to_speech_api_ai_host_tts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TTSRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-host/test-simple": {
      "get": {
        "tags": [
          "ai-host"
        ],
        "summary": "Test Simple Get",
        "description": "Test GET endpoint",
        "operationId": "test_simple_get_api_ai_host_test_simple_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ai-host/tts/{text}": {
      "head": {
        "tags": [
          "ai-host"
        ],
        "summary": "Text To Speech Head",
        "description": "HEAD endpoint for TTS resource validation (for browser preflight checks)",
        "operationId": "text_to_speech_head_api_ai_host_tts__text__head",
        "parameters": [
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "voice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "nova",
              "title": "Voice"
            }
          },
          {
            "name": "speed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1.0,
              "title": "Speed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ai-host"
        ],
        "summary": "Text To Speech Get",
        "description": "GET endpoint for TTS (convenient for frontend)  \nUsage: /api/ai-host/tts/HelloWorld?voice=nova&speed=1.0",
        "operationId": "text_to_speech_get_api_ai_host_tts__text__get",
        "parameters": [
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "voice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "nova",
              "title": "Voice"
            }
          },
          {
            "name": "speed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1.0,
              "title": "Speed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-host/extract-topics": {
      "post": {
        "tags": [
          "ai-host"
        ],
        "summary": "Extract Topics",
        "description": "Extract topics and hashtags from text input using GPT-4\n\nThis endpoint analyzes text and extracts:\n- Main topics (3-5 key topics)\n- Relevant hashtags (5-8 hashtags for matching)\n- Content category\n- Sentiment analysis\n- Conversation style",
        "operationId": "extract_topics_api_ai_host_extract_topics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicExtractionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicExtractionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-host/extract-topics-from-voice": {
      "post": {
        "tags": [
          "ai-host"
        ],
        "summary": "Extract Topics From Voice",
        "description": "Extract topics and hashtags from voice input using Whisper + GPT-4\n\nThis endpoint processes voice input and extracts:\n- Speech transcription (using Whisper)\n- Main topics (using GPT-4)\n- Relevant hashtags for matching\n- Content analysis (sentiment, style, category)\n\nThe voice-to-hashtag pipeline:\nVoice → Whisper STT → GPT-4 Topic Analysis → Hashtags for Matching",
        "operationId": "extract_topics_from_voice_api_ai_host_extract_topics_from_voice_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_topics_from_voice_api_ai_host_extract_topics_from_voice_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceTopicExtractionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-host/upload-audio": {
      "post": {
        "tags": [
          "ai-host"
        ],
        "summary": "Upload Audio For Stt",
        "description": "Upload audio file for speech-to-text transcription\n\nCore user workflow: User registers and directly uploads speech saying what they want to talk about",
        "operationId": "upload_audio_for_stt_api_ai_host_upload_audio_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "extract_topics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Extract Topics"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Language"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_audio_for_stt_api_ai_host_upload_audio_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STTResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-host/health": {
      "get": {
        "tags": [
          "ai-host"
        ],
        "summary": "Ai Host Health Check",
        "description": "Check AI host service health",
        "operationId": "ai_host_health_check_api_ai_host_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ai-host/voice-chat": {
      "websocket": {
        "summary": "Real-time voice chat with GPT-4o Realtime Preview",
        "description": "WebSocket endpoint for real-time voice communication with AI host using GPT-4o Realtime Preview",
        "tags": [
          "AI Host"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Firebase ID token"
          }
        ],
        "requestBody": {
          "description": "Voice data and control messages",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "voice_data",
                      "control"
                    ],
                    "description": "Message type"
                  },
                  "data": {
                    "type": "string",
                    "description": "Base64 encoded audio data"
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "wav",
                      "mp3"
                    ],
                    "description": "Audio format"
                  },
                  "sample_rate": {
                    "type": "integer",
                    "default": 16000,
                    "description": "Audio sample rate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "101": {
            "description": "WebSocket connection established"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIMatchRequest": {
        "properties": {
          "user_voice_input": {
            "type": "string",
            "title": "User Voice Input"
          },
          "audio_file_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio File Url"
          },
          "max_participants": {
            "type": "integer",
            "title": "Max Participants",
            "default": 2
          },
          "language_preference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Preference",
            "default": "en-US"
          }
        },
        "type": "object",
        "required": [
          "user_voice_input"
        ],
        "title": "AIMatchRequest"
      },
      "AIMatchResponse": {
        "properties": {
          "match_id": {
            "type": "string",
            "title": "Match Id"
          },
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "extracted_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Extracted Topics"
          },
          "generated_hashtags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Generated Hashtags"
          },
          "match_confidence": {
            "type": "number",
            "title": "Match Confidence"
          },
          "estimated_wait_time": {
            "type": "integer",
            "title": "Estimated Wait Time"
          },
          "ai_greeting": {
            "type": "string",
            "title": "Ai Greeting"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "match_id",
          "session_id",
          "extracted_topics",
          "generated_hashtags",
          "match_confidence",
          "estimated_wait_time",
          "ai_greeting",
          "status"
        ],
        "title": "AIMatchResponse"
      },
      "AuthResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "display_name",
          "email",
          "message"
        ],
        "title": "AuthResponse"
      },
      "Body_extract_topics_from_voice_api_ai_host_extract_topics_from_voice_post": {
        "properties": {
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "default": "en-US"
          }
        },
        "type": "object",
        "required": [
          "audio_file"
        ],
        "title": "Body_extract_topics_from_voice_api_ai_host_extract_topics_from_voice_post"
      },
      "Body_upload_audio_for_stt_api_ai_host_upload_audio_post": {
        "properties": {
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          }
        },
        "type": "object",
        "required": [
          "audio_file"
        ],
        "title": "Body_upload_audio_for_stt_api_ai_host_upload_audio_post"
      },
      "CreateRoomRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "max_participants": {
            "type": "integer",
            "title": "Max Participants",
            "default": 10
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "topic"
        ],
        "title": "CreateRoomRequest"
      },
      "FriendListResponse": {
        "properties": {
          "friends": {
            "items": {
              "$ref": "#/components/schemas/FriendResponse"
            },
            "type": "array",
            "title": "Friends"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "friends",
          "total"
        ],
        "title": "FriendListResponse"
      },
      "FriendRequestListResponse": {
        "properties": {
          "requests": {
            "items": {
              "$ref": "#/components/schemas/FriendRequestResponse"
            },
            "type": "array",
            "title": "Requests"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "requests",
          "total"
        ],
        "title": "FriendRequestListResponse"
      },
      "FriendRequestResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "from_user_id": {
            "type": "string",
            "title": "From User Id"
          },
          "from_display_name": {
            "type": "string",
            "title": "From Display Name"
          },
          "to_user_id": {
            "type": "string",
            "title": "To User Id"
          },
          "to_display_name": {
            "type": "string",
            "title": "To Display Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "id",
          "from_user_id",
          "from_display_name",
          "to_user_id",
          "to_display_name",
          "status",
          "created_at"
        ],
        "title": "FriendRequestResponse"
      },
      "FriendResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "last_seen": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen"
          },
          "friendship_status": {
            "type": "string",
            "title": "Friendship Status"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "display_name",
          "status",
          "last_seen",
          "friendship_status"
        ],
        "title": "FriendResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JoinRoomRequest": {
        "properties": {
          "room_id": {
            "type": "string",
            "title": "Room Id"
          }
        },
        "type": "object",
        "required": [
          "room_id"
        ],
        "title": "JoinRoomRequest"
      },
      "MatchRequest": {
        "properties": {
          "preferred_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Preferred Topics"
          },
          "max_participants": {
            "type": "integer",
            "title": "Max Participants",
            "default": 3
          },
          "language_preference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Preference"
          }
        },
        "type": "object",
        "required": [
          "preferred_topics"
        ],
        "title": "MatchRequest"
      },
      "MatchResponse": {
        "properties": {
          "match_id": {
            "type": "string",
            "title": "Match Id"
          },
          "room_id": {
            "type": "string",
            "title": "Room Id"
          },
          "participants": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Participants"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "estimated_wait_time": {
            "type": "integer",
            "title": "Estimated Wait Time"
          }
        },
        "type": "object",
        "required": [
          "match_id",
          "room_id",
          "participants",
          "topic",
          "status",
          "estimated_wait_time"
        ],
        "title": "MatchResponse"
      },
      "ParticipantResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "joined_at": {
            "type": "string",
            "title": "Joined At"
          },
          "is_speaking": {
            "type": "boolean",
            "title": "Is Speaking"
          },
          "connection_quality": {
            "type": "string",
            "title": "Connection Quality"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "display_name",
          "joined_at",
          "is_speaking",
          "connection_quality"
        ],
        "title": "ParticipantResponse"
      },
      "ProcessInputRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "user_input": {
            "type": "string",
            "title": "User Input"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "user_input"
        ],
        "title": "ProcessInputRequest"
      },
      "ProcessInputResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "ai_response": {
            "type": "string",
            "title": "Ai Response"
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url"
          },
          "session_state": {
            "type": "string",
            "title": "Session State"
          },
          "extracted_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Extracted Topics",
            "default": []
          },
          "generated_hashtags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Generated Hashtags",
            "default": []
          },
          "next_action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Action"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "ai_response",
          "session_state"
        ],
        "title": "ProcessInputResponse"
      },
      "QueueStatusResponse": {
        "properties": {
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "estimated_wait_time": {
            "type": "integer",
            "title": "Estimated Wait Time"
          },
          "queue_size": {
            "type": "integer",
            "title": "Queue Size"
          }
        },
        "type": "object",
        "required": [
          "position",
          "estimated_wait_time",
          "queue_size"
        ],
        "title": "QueueStatusResponse"
      },
      "RecordingListResponse": {
        "properties": {
          "recordings": {
            "items": {
              "$ref": "#/components/schemas/RecordingResponse"
            },
            "type": "array",
            "title": "Recordings"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "recordings",
          "total"
        ],
        "title": "RecordingListResponse"
      },
      "RecordingMetadata": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          }
        },
        "type": "object",
        "title": "RecordingMetadata"
      },
      "RecordingResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "room_id": {
            "type": "string",
            "title": "Room Id"
          },
          "room_name": {
            "type": "string",
            "title": "Room Name"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "participants": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Participants"
          },
          "duration": {
            "type": "integer",
            "title": "Duration"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "room_id",
          "room_name",
          "topic",
          "participants",
          "duration",
          "file_size",
          "created_at",
          "status"
        ],
        "title": "RecordingResponse"
      },
      "RoomListResponse": {
        "properties": {
          "rooms": {
            "items": {
              "$ref": "#/components/schemas/RoomResponse"
            },
            "type": "array",
            "title": "Rooms"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "rooms",
          "total"
        ],
        "title": "RoomListResponse"
      },
      "RoomResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "participants": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Participants"
          },
          "max_participants": {
            "type": "integer",
            "title": "Max Participants"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "livekit_room_name": {
            "type": "string",
            "title": "Livekit Room Name"
          },
          "livekit_token": {
            "type": "string",
            "title": "Livekit Token"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "topic",
          "participants",
          "max_participants",
          "status",
          "created_at",
          "livekit_room_name",
          "livekit_token"
        ],
        "title": "RoomResponse"
      },
      "STTResponse": {
        "properties": {
          "transcription": {
            "type": "string",
            "title": "Transcription"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "duration": {
            "type": "number",
            "title": "Duration"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          },
          "words": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Words",
            "default": []
          },
          "extracted_topics": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extracted Topics"
          },
          "generated_hashtags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated Hashtags"
          }
        },
        "type": "object",
        "required": [
          "transcription",
          "language",
          "duration",
          "confidence"
        ],
        "title": "STTResponse"
      },
      "SendFriendRequestRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "SendFriendRequestRequest"
      },
      "SignInRequest": {
        "properties": {
          "firebase_uid": {
            "type": "string",
            "title": "Firebase Uid"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "firebase_uid",
          "email"
        ],
        "title": "SignInRequest"
      },
      "SignUpRequest": {
        "properties": {
          "firebase_uid": {
            "type": "string",
            "title": "Firebase Uid"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "firebase_uid",
          "display_name",
          "email"
        ],
        "title": "SignUpRequest"
      },
      "StartSessionRequest": {
        "properties": {
          "user_preferences": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Preferences"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "default": "en-US"
          },
          "voice": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice",
            "default": "nova"
          }
        },
        "type": "object",
        "title": "StartSessionRequest"
      },
      "StartSessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "ai_greeting": {
            "type": "string",
            "title": "Ai Greeting"
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url"
          },
          "session_state": {
            "type": "string",
            "title": "Session State"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "ai_greeting",
          "session_state"
        ],
        "title": "StartSessionResponse"
      },
      "TTSRequest": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice",
            "default": "nova"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed",
            "default": 1.0
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TTSRequest"
      },
      "TopicExtractionRequest": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "user_context": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Context"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TopicExtractionRequest"
      },
      "TopicExtractionResponse": {
        "properties": {
          "main_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Main Topics"
          },
          "hashtags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hashtags"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sentiment": {
            "type": "string",
            "title": "Sentiment"
          },
          "conversation_style": {
            "type": "string",
            "title": "Conversation Style"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "main_topics",
          "hashtags",
          "category",
          "sentiment",
          "conversation_style",
          "confidence"
        ],
        "title": "TopicExtractionResponse"
      },
      "TopicListResponse": {
        "properties": {
          "topics": {
            "items": {
              "$ref": "#/components/schemas/TopicResponse"
            },
            "type": "array",
            "title": "Topics"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "topics",
          "total"
        ],
        "title": "TopicListResponse"
      },
      "TopicResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "difficulty_level": {
            "type": "integer",
            "title": "Difficulty Level"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "category",
          "difficulty_level",
          "is_active"
        ],
        "title": "TopicResponse"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "email"
        ],
        "title": "UserResponse"
      },
      "UserTopicPreferencesRequest": {
        "properties": {
          "topic_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Topic Ids"
          }
        },
        "type": "object",
        "required": [
          "topic_ids"
        ],
        "title": "UserTopicPreferencesRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VoiceTopicExtractionResponse": {
        "properties": {
          "transcription": {
            "type": "string",
            "title": "Transcription"
          },
          "main_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Main Topics"
          },
          "hashtags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hashtags"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sentiment": {
            "type": "string",
            "title": "Sentiment"
          },
          "conversation_style": {
            "type": "string",
            "title": "Conversation Style"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "transcription",
          "main_topics",
          "hashtags",
          "category",
          "sentiment",
          "conversation_style",
          "confidence"
        ],
        "title": "VoiceTopicExtractionResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}